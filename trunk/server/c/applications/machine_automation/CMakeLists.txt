IF(NOT SQ_ARDUINO)
  SQ_GENERATE(machine machine.automation)
  SET(SOURCES main.c files.c memory.c process.c ${SQ_GENERATE_machine})

  IF(SQ_WIN32)  
    LIST(APPEND SOURCES process_win32.c windows_win32_oleacc.c)
  ELSE(SQ_WIN32)
    INCLUDE(FindPkgConfig)

    PKG_CHECK_MODULES(CSPI1 cspi-1.0)
    PKG_CHECK_MODULES(ATSPI2 glib-2.0 atspi-2)
    
    LIST(APPEND SOURCES process_linux.c)
    
    IF(ATSPI2_FOUND)
      INCLUDE_DIRECTORIES(${ATSPI2_INCLUDE_DIRS})
      LINK_DIRECTORIES(${ATSPI2_LIBRARY_DIRS})
      SET(CFLAGS ${CFLAGS} ${ATSPI2_CFLAGS})
      SET(LDFLAGS ${LDFLAGS} ${ATSPI2_LDFLAGS})
      LIST(APPEND SOURCES windows_atspi2.c)
    ELSE(ATSPI2_FOUND)
      IF(CSPI1_FOUND)
        INCLUDE_DIRECTORIES(${CSPI1_INCLUDE_DIRS})
        LINK_DIRECTORIES(${CSPI1_LIBRARY_DIRS})
        SET(CFLAGS ${CFLAGS} ${CSPI1_CFLAGS})
        SET(LDFLAGS ${LDFLAGS} ${CSPI1_LDFLAGS})
        LIST(APPEND SOURCES windows_cspi1.0.c)
      ELSE(CSPI1_FOUND)
        LIST(APPEND SOURCES windows.c)
      ENDIF(CSPI1_FOUND)
    ENDIF(ATSPI2_FOUND)
  ENDIF(SQ_WIN32)
  
  ADD_EXECUTABLE(machine_automation ${SOURCES})
  TARGET_LINK_LIBRARIES(machine_automation SequantoAutomation)
  
  IF(SQ_WIN32)  
    TARGET_LINK_LIBRARIES(machine_automation psapi)
    TARGET_LINK_LIBRARIES(machine_automation oleacc)
  ELSE(SQ_WIN32)
    IF(ATSPI2_FOUND)
        TARGET_LINK_LIBRARIES(machine_automation ${ATSPI2_LIBRARIES})
    ELSE(ATSPI2_FOUND)
      IF(CSPI1_FOUND)
        TARGET_LINK_LIBRARIES(machine_automation ${CSPI1_LIBRARIES})
      ENDIF(CSPI1_FOUND)
    ENDIF(ATSPI2_FOUND)
  ENDIF(SQ_WIN32)
  
  ADD_CUSTOM_TARGET(runserver ./machine_automation DEPENDS machine_automation)
ENDIF(NOT SQ_ARDUINO)
